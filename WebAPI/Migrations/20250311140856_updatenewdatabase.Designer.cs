// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebAPI.Data;

#nullable disable

namespace WebAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250311140856_updatenewdatabase")]
    partial class updatenewdatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebAPI.Models.Car", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BienSo")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("BIENSO");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DIACHI");

                    b.Property<string>("DienThoai")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("DIENTHOAI");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("MODEL");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("NAME");

                    b.Property<string>("TenChuXe")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("TENCHUXE");

                    b.HasKey("Id");

                    b.ToTable("CAR");
                });

            modelBuilder.Entity("WebAPI.Models.CarRecord", b =>
                {
                    b.Property<int>("CarRecordID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarRecordID"));

                    b.Property<string>("BienSo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HieuXe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTiepNhan")
                        .HasColumnType("datetime2");

                    b.Property<string>("SoDienThoai")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenChuXe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenXe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CarRecordID");

                    b.ToTable("CARRECORD");
                });

            modelBuilder.Entity("WebAPI.Models.HieuXe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TenHieuXe")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("hieuXes");
                });

            modelBuilder.Entity("WebAPI.Models.NoiDungPhieuSuaChua", b =>
                {
                    b.Property<int>("NoiDungID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NoiDungID"));

                    b.Property<double?>("DonGia")
                        .HasColumnType("float");

                    b.Property<string>("NoiDung")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PhieuSuaChuaID")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong")
                        .HasColumnType("int");

                    b.Property<double?>("ThanhTien")
                        .HasColumnType("float");

                    b.Property<int?>("TienCongID")
                        .HasColumnType("int");

                    b.Property<int?>("VatTuPhuTungID")
                        .HasColumnType("int");

                    b.HasKey("NoiDungID");

                    b.ToTable("noiDungPhieuSuaChuas");
                });

            modelBuilder.Entity("WebAPI.Models.PhieuSuaChua", b =>
                {
                    b.Property<int>("PhieuSuaChuaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PhieuSuaChuaID"));

                    b.Property<string>("BienSoXe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySuaChua")
                        .HasColumnType("datetime2");

                    b.HasKey("PhieuSuaChuaID");

                    b.ToTable("phieuSuaChuas");
                });

            modelBuilder.Entity("WebAPI.Models.RuleVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("SoXeTiepNhanToiDaMotNgay")
                        .HasColumnType("int")
                        .HasColumnName("SOXETIEPNHANTOIDAMOTNGAY");

                    b.HasKey("Id");

                    b.ToTable("RULEVARIABLE");
                });

            modelBuilder.Entity("WebAPI.Models.TienCong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<double?>("Cost")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("tienCongs");
                });

            modelBuilder.Entity("WebAPI.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("HasAccount")
                        .HasColumnType("bit");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("TienNo")
                        .HasColumnType("float");

                    b.Property<int?>("UserAccountID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.ToTable("users");
                });

            modelBuilder.Entity("WebAPI.Models.UserAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("PASSWORD");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("ROLE");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("USERNAME");

                    b.HasKey("Id");

                    b.ToTable("USERACCOUNT");
                });

            modelBuilder.Entity("WebAPI.Models.VatTuPhuTung", b =>
                {
                    b.Property<int>("VTPTID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VTPTID"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Price")
                        .HasColumnType("float");

                    b.HasKey("VTPTID");

                    b.ToTable("vatTuPhuTungs");
                });
#pragma warning restore 612, 618
        }
    }
}
